Ejercicio 1
Crear una clase Empleado con atributo nombre, apellido, legajo, aniosTrabajados
Sobrescribir el método toString() para ver una representación entendible de un objeto de la clase
Crear en la clase de arranque un Set de empleados.
Crear 5 objetos empleado, donde 2 empleados tienen los mismos valores de atributos, agregarlos al set
Iterar sobre el set y mostrar los objetos empleados
Crear una herencia de la clase Empleado (EmpleadoSet) y modificarla para que cuando se agreguen EmpleadoSet a un set, los repetidos sean ignorados. Investigar como se hace.
Crear 5 objetos empleadoSet, donde 2 empleados tienen los mismos valores de atributos, agregarlos al set
Iterar sobre el set y mostrar los objetos empleados. Verificar que el duplicado no existe.


Ejercicio 2
Crear una clase Empleado con atributo nombre, apellido, legajo, aniosTrabajados
Crear una clase generica ListaGenerica que permita mantener una lista de objetos que implementan la interfaz comparable.
1. Definir un método que permita agregar un elemento a la lista.
2. Definir un método que devuelva la lista de objetos.
3. Definir un método que devuelva la cantidad de elementos almacenados en la lista.
4. Definir un método que permita agregar un elemento al principio de la lista.
5. Definir un método que permita ordenar la lista.
6. Definir un método que permita desordenar (barajar) la lista.
7. Definir un método que permita almacenar un elemento en una posición particular de la lista, los parámetros que recibe son el objeto a almacenar y la posición en la lista.
8. Definir un método que devuelva el objeto en una posición específica de la lista
9. Definir un método que devuelva el objeto en la primer posición de la lista
10. Definir un método que devuelva el objeto en la ultima posición posición de la lista
11. Definir un método que remueva un objeto en una posición particular de la lista.



Ejercicio 3
Mejorar al ejercicio anterior agregando las siguientes excepciones.
Una excepción para la función 7 si el indice es mas grande que la cantidad de elementos de la lista.
Una excepción para la función 8 si el indice es mayor a la cantidad de elementos en la lista.
Una excepción para la función 9 y 10 si la lista de elementos es vacía.
Una excepción para la función 10 si el elemento en la lista no existe.
